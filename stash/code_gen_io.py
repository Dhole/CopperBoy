#!/usr/bin/env python3

io_regs = """
PINB 0x23
DDRB 0x24
PORTB 0x25
PINC 0x26
DDRC 0x27
PORTC 0x28
PIND 0x29
DDRD 0x2a
PORTD 0x2b
PINE 0x2c
DDRE 0x2d
PORTE 0x2e
PINF 0x2f
DDRF 0x30
PORTF 0x31

TIFR1 0x35
TIFR0 0x36

TIFR3 0x38
TIFR4 0x39

PCIFR 0x3b
EIFR 0x3c
EIMSK 0x3d
GPIOR0 0x3e
EECR 0x3f
EEDR 0x40
EEARL 0x41
EEARH 0x42
GTCCR 0x43
TCCR0A 0x44
TCCR0B 0x45
TCNT0 0x46
OCR0A 0x47
OCR0B 0x48
PLLCSR 0x49
GPIOR1 0x4a
GPIOR2 0x4b
SPCR 0x4c
SPSR 0x4d
SPDR 0x4e

ACSR 0x50
OCDR_MONDR 0x51
PLLFRQ 0x52
SMCR 0x53
MCUSR 0x54
MCUCR 0x55

SPMCSR 0x57

RAMPZ 0x5b

SPL 0x5d
SPH 0x5e
SREG 0x5f
WDTCSR 0x60
CLKPR 0x61

PRR0 0x64
PRR1 0x65
OSCCAL 0x66
RCCTRL 0x67
PCICR 0x68
EICRA 0x69
EICRB 0x6a

TIMSK0 0x6e
TIMSK1 0x6f

TIMSK3 0x71
TIMSK4 0x72

ADCL 0x78
ADCH 0x79
ADCSRA 0x7a
ADCSRB 0x7b
ADMUX 0x7c
DIDR2 0x7d
DIDR0 0x7e
DIDR1 0x7f
TCCR1A 0x80
TCCR1B 0x81
TCCR1C 0x82

TCNT1L 0x84
TCNT1H 0x85
ICR1L 0x86
ICR1H 0x87
OCR1AL 0x88
OCR1AH 0x89
OCR1BL 0x8a
OCR1BH 0x8b
OCR1CL 0x8c
OCR1CH 0x8d

TCCR3A 0x90
TCCR3B 0x91
TCCR3C 0x92

TCNT3L 0x94
TCNT3H 0x95
ICR3L 0x96
ICR3H 0x97
OCR3AL 0x98
OCR3AH 0x99
OCR3BL 0x9a
OCR3BH 0x9b
OCR3CL 0x9c
OCR3CH 0x9d

TWBR 0xb8
TWSR 0xb9
TWAR 0xba
TWDR 0xbb
TWCR 0xbc
TWAMR 0xbd
TCNT4 0xbe
TC4H 0xbf
TCCR4A 0xc0
TCCR4B 0xc1
TCCR4C 0xc2
TCCR4D 0xc3
TCCR4E 0xc4
CLKSEL0 0xc5
CLKSEL1 0xc6
CLKSTA 0xc7
UCSR1A 0xc8
UCSR1B 0xc9
UCSR1C 0xca

UBRR1L 0xcc
UBRR1H 0xcd
UDR1 0xce
OCR4A 0xcf
OCR4B 0xd0
OCR4C 0xd1
OCR4D 0xd2

DT4 0xd4

UHWCON 0xd7
USBCON 0xd8
USBSTA 0xd9
USBINT 0xda

UDCON 0xe0
UDINT 0xe1
UDIEN 0xe2
UDADDR 0xe3
UDFNUML 0xe4
UDFNUMH 0xe5
UDMFN 0xe6

UEINTX 0xe8
UENUM 0xe9
UERST 0xea
UECONX 0xeb
UECFG0X 0xec
UECFG1X 0xed
UESTA0X 0xee
UESTA1X 0xef
UEIENX 0xf0
UEDATX 0xf1
UEBCLX 0xf2
UEBCHX 0xf3
UEINT 0xf4
"""

for io_reg in io_regs.split('\n'):
    if len(io_reg) == 0 or io_reg[0] == '#':
        continue
    [reg, addr] = io_reg.split()
    print(f'pub const {reg}: u16 = {addr};')

print()

print('match addr {')
for io_reg in io_regs.split('\n'):
    if len(io_reg) == 0 or io_reg[0] == '#':
        continue
    [reg, addr] = io_reg.split()
    print(f'  {addr} => Some("{reg}"),')
print('  _ => None,')
print('}')
